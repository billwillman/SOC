local CSharpEventContainer = require("_Common.CSharpEventContainer")
local GameMode = _MOE.class("GameMode", CSharpEventContainer)

function GameMode:Ctor(netWorkMgr, binder)
    self.NetWorkMgr = netWorkMgr
    self.Binder = binder
    self:RegisterSystemEvents()

    -- 设置GameMode数据
    _MOE.GameApp.GameMode = self
end

function GameMode:OnDestroy()
    self:UnRegsterAllCsharpEvents()
    self.Transport = nil
end

if _MOE.IsDS then
    ----------------------------- 只有DS上才跑这个逻辑

    function GameMode:RegisterSystemEvents()
        local EventType = _MOE.LuaEvent_MonoEventType
        self.Binder:RegisterLuaEvent(EventType.Awake:GetHashCode(), self.OnAwake)
        self.Binder:RegisterLuaEvent(EventType.Destroyed:GetHashCode(), self.OnDestroy)
        self.Binder:RegisterLuaEvent(EventType.Start:GetHashCode(), self.OnStart)
    end

    function GameMode:OnAwake()
        self.Transport = self.NetWorkMgr.gameObject:GetComponent(typeof(CS.Unity.Netcode.Transports.UTP.UnityTransport))
        self.DsGsNetModel = _MOE.GameApp:GetModel("DsGsNetModel")
        self.DsSessionManager = _MOE.GameApp:GetModel("DsSessionManager")
    end

    function GameMode:OnStart()
        -- 连接到GS上
        self.DsGsNetModel:ConnectGS()
    end

    function GameMode:OnGsConnectResult(isOk)
        if not isOk or not self.Transport or not self.NetWorkMgr then
            _MOE.GameApp:QuitGame()
            return
        end
        local GsSession = _MOE.GameApp:GetGsDsSession()
        if not GsSession then
            _MOE.GameApp:QuitGame()
            return
        end
        local ip = GsSession.DsIp or "127.0.0.1"
        local port = GsSession.DsPort or 7777
        self.Transport:SetConnectionData(ip, port)
        if not self.NetWorkMgr:StartHost() then
            _MOE.Logger.LogError("[DS] NetManager:StartHost False")
            _MOE.GameApp:QuitGame()
            return
        end
    end

else
    ------------------------- 只在Client跑这个逻辑 -------------------

    function GameMode:RegisterSystemEvents()
        self.Binder:RegisterLuaEvent(EventType.Awake:GetHashCode(), self.OnAwake)
        self.Binder:RegisterLuaEvent(EventType.Destroyed:GetHashCode(), self.OnDestroy)
    end

    function GameMode:OnAwake()
        self.Transport = self.NetWorkMgr.gameObject:GetComponent(typeof(CS.Unity.Netcode.Transports.UTP.UnityTransport))
        self:RegsterCSharpEvent(self.NetWorkMgr, "OnClientStarted", self.OnClientConnected)
    end

    function GameMode:OnClientConnected()
    end
end

return GameMode