local BaseAppClass = require("_Common.BaseApp")
require("_Client.ClientEvents")

local ClientApp = _MOE.class("ClientApp", BaseAppClass)

local function CreateUIRoot()
    local root = _MOE.ResourceManager:CreateGameObject("Resources/UI/UI Root.prefab")
    if root then
        root.name = "UI Root"
        root.transform:SetParent(_MOE.GameStartTransform, false)
    end
end

local function CreateMyPlayerInput()
    local playerInput = _MOE.ResourceManager:CreateGameObject("Resources/@Input/PlayerInput.prefab")
    if playerInput then
        playerInput.name = "PlayerInput"
        playerInput.transform:SetParent(_MOE.GameStartTransform, false)
    end
end

function ClientApp:OnInit()
    CreateUIRoot()
    _MOE.BaseViewClass = require("_Common.BaseView")
    self:RegisterModel("TimerManager", "_Common.TimerManager", false)
    self.TimerManager = self:GetModel("TimerManager")
    _MOE.TimerManager = self.TimerManager
    _MOE.UIManager = require("_Client.UIManager").New()
    self:RegisterModel("NetClientModel", "_Client.Models.NetClientModel")
    self:RegisterModel("LoginModel", "_Client.Models.LoginModel", false)

    CreateMyPlayerInput()
end

function ClientApp:OnQuit()
    self:DestroyDSNetManagerPrefab()
    _MOE.UIManager:FreeAllWindow()
    _MOE.NetManager:Disconnect()
end

function ClientApp:OnUpdate(deltaTime)
    if self.TimerManager and self.TimerManager.OnUpdate then
        self.TimerManager:OnUpdate(deltaTime)
    end
end

----------------------------------------------------- DS链接对象 -----------------------------
function ClientApp:CreateDSNetManagerPrefab()
    if self.DSNetManagerPrefab then
        return
    end
    local gameObj = _MOE.ResourceManager:CreateGameObject("Resources/@Net/MutiManager.prefab")
    if gameObj then
        gameObj.transform:SetParent(_MOE.GameStartTransform, false)
    end
    self.DSNetManagerPrefab = gameObj
end

function ClientApp:DestroyDSNetManagerPrefab()
    if not self.DSNetManagerPrefab then
        return
    end
    _MOE.GameObject.Destroy(self.DSNetManagerPrefab)
    self.DSNetManagerPrefab = nil
end

return ClientApp