_MOE = {
    IsOpenLog = true,
    IsEditor = false,
    IsDS = false,
}

_MOE.Logger = {
    Log = function (...)
        if _MOE.IsOpenLog then
            CS.UnityEngine.Debug.Log(...)
        end
    end,
    LogError = function (...)
        if _MOE.IsOpenLog then
            CS.UnityEngine.Debug.LogError(...)
        end
    end,
    LogWarning = function (...)
        if _MOE.IsOpenLog then
            CS.UnityEngine.Debug.LogWarning(...)
        end
    end,
    LogFormat = function (fmt, ...)
        if _MOE.IsOpenLog then
            CS.UnityEngine.Debug.LogFormat(...)
        end
    end,
    LogErrorFormat = function(fmt, ...)
        if _MOE.IsOpenLog then
            CS.UnityEngine.Debug.LogErrorFormat(fmt, ...)
        end
    end
}

_MOE.NetManager = CS.NsTcpClient.NetManager:GetInstance()
_MOE.ResourceManager = CS.ResourceMgr:GetInstance()
_MOE.HttpHelper = CS.NsHttpClient.HttpHelper
_MOE.HttpStrResponse = CS.NsHttpClient.HttpClientStrResponse
_MOE.HttpListenerStatus = CS.NsHttpClient.HttpListenerStatus
_MOE.GameObject = CS.GameObject
_MOE.AutoUpdateMgr = CS.AutoUpdate.AutoUpdateMgr:GetInstance() -- 资源更新模块
_MOE.GameStart = CS.SOC.GamePlay.GameStart.Instance
_MOE.GameStartTransform = _MOE.GameStart.transform
_MOE.RectTransformClass = typeof(CS.UnityEngine.RectTransform)
_MOE.RectClass = CS.UnityEngine.Rect
_MOE.Vector2 = CS.UnityEngine.Vector2
_MOE.class = require("Common.BaseClass") -- class框架
_MOE.Json = require("Common.json")

_G.ErrorHandler = function (err)
    _MOE.Logger.LogError(err)
	_MOE.Logger.LogError(debug.traceback())
end

return _MOE