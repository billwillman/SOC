if _MOE.IsDS then
    _MOE.Logger.Log("[Server] LuaPanda Start Debug...")
    require("LuaPanda").start("127.0.0.1", 31001)
else
    _MOE.Logger.Log("[Client] LuaPanda Start Debug...")
    require("LuaPanda").start("127.0.0.1", 31000)
end

print(string.format("[Main.lua] IsDS: %s IsEditor: %s", _MOE.IsDS, _MOE.IsEditor))

require("_Common.CommonEvents")

function CreateNetworkManager()
    local gameObj = _MOE.ResourceManager:CreateGameObject("Resources/@Net/MutiManager.prefab")
    if gameObj then
        -- gameObj.transform:SetParent(_MOE.GameStartTransform, false)
        gameObj.name = "MutiManager"
    end
    return gameObj
end

local function InitGlobalVars()
    _MOE.BaseModel = require("_Common.BaseModel")
    _MOE.EventManager = require("_Common.EventManager").New()
    if not _MOE.IsDS then
       _MOE.PlayerPrefs = CS.UnityEngine.PlayerPrefs -- 设备相关数据存储
    end
end

local function CreateApplication()
    local appClass
    if _MOE.IsDS then
        appClass = require("_DS.DSApp")
    else
        appClass = require("_Client.ClientApp")
    end
    if not appClass then
        _MOE.Logger.LogError("[CreateApplication] not found appClass~!")
        return
    end
    _MOE.GameApp = appClass.New()
    _MOE.GameApp:Init()
end

--- 主函数
function Main()
    _MOE.Logger.Log("[xlua] Main Start...")
    -- 设置调试Lua Panda调试
    InitGlobalVars()
    CreateApplication()
end

--- 游戏结束
function QuitGame()
    if _MOE.GameApp then
        _MOE.Logger.Log("[QuitGame] GameApp")
        _MOE.GameApp:Quit()
    end
    _MOE.EventManager:ClearAllEvents()
end

function Update(deltaTime)
    if _MOE.GameApp and _MOE.GameApp.Update then
        _MOE.GameApp:Update(deltaTime)
    end
end