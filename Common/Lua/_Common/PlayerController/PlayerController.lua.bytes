local CSharpEventContainer = require("_Common.CSharpEventContainer")

local PlayerController = _MOE.class("PlayerController", CSharpEventContainer)

local function GetClientId(self)
    if self.PlayerController then
        return self.PlayerController.OwnerClientId
    end
end

local function AddPlayerController(self)
    _MOE.PlayerControllers = _MOE.PlayerControllers or {}
    _MOE.PlayerControllerList = _MOE.PlayerControllerList or {}
    local data = {
        index = #_MOE.PlayerControllerList + 1,
        target = self,
    }
    _MOE.PlayerControllers[self:GetClientId()] = data
    _MOE.PlayerControllerList[data.index] = data
end

local function RemovePlayerController(self)
    local clientId = self:GetClientId()
    if not clientId then
        return
    end
    local data = _MOE.PlayerControllers[clientId]
    if data then
        if data.index then
            _MOE.PlayerControllerList[data.index] = nil
        end
    end
    _MOE.PlayerControllers[clientId] = nil

    self.ClientId = nil
end

function PlayerController:Ctor(playerController, binder)
    self.PlayerController = playerController
    self.Binder = binder

    local EventType = _MOE.LuaEvent_MonoEventType
    self.Binder:RegisterLuaEvent(EventType.Destroyed:GetHashCode(), self.OnDestroy)

    self:RegsterCSharpEvent(self.PlayerController, "onNetworkSpawn", self.OnNetworkSpawn)
    self:RegsterCSharpEvent(self.PlayerController, "onNetworkDespawn", self.OnNetworkDespawn)
end

function PlayerController:OnNetworkSpawn()
    -- 优先设置上
    -- 只有在OnNetworkSpawn才有ClientId
    self.ClientId = GetClientId(self)
    --

    _MOE.Logger.LogFormat("[PlayerController] OnNetworkSpawn(ClientId:{0:D})", self:GetClientId())
    AddPlayerController(self)
end

function PlayerController:GetClientId()
    return self.ClientId
end

function PlayerController:OnNetworkDespawn()
    _MOE.Logger.LogFormat("[PlayerController] OnNetworkDespawn(ClientId:{0:D})", self:GetClientId())
    RemovePlayerController(self)
end

function PlayerController:OnDestroy()
    RemovePlayerController(self)
    self.PlayerController = nil
    self.Binder = nil
end

return PlayerController